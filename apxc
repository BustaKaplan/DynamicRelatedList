public class FilteredRelatedList {
   	@AuraEnabled
    public static List<Object> getRecords(Id recordId, string queryString) {
        List<Object> recordList = new List<Object>();
        recordList =  Database.query(queryString);
        return recordList;  
   }
    @AuraEnabled
    public static List <String> getFieldLabels(String field1, String field2, String field3, String field4, string objectName ){
		List <String> fieldLabelList = new List<String>();
        
        //Get a map of all field labels for the entered contact
        List<Schema.DescribeSObjectResult> describeSobjectsResult = Schema.describeSObjects(new List<String>{objectName}); // this can accept list of strings, we describe only one object here
		Map<String, Schema.SObjectField> allFields = describeSobjectsResult[0].fields.getMap();
		System.debug(allFields);
        //Store the inputted field API names in a list
		fieldLabelList.add(allFields.get(field1).getDescribe().getLabel());
        fieldLabelList.add(allFields.get(field2).getDescribe().getLabel());
        fieldLabelList.add(allFields.get(field3).getDescribe().getLabel());
        fieldLabelList.add(allFields.get(field4).getDescribe().getLabel());
        return fieldLabelList;
		
        
    }
}
